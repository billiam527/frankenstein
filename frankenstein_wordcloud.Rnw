\documentclass{article}
\usepackage{natbib}

<<echo=FALSE>>=
packages<-c('dplyr','stringr','tidytext','wordcloud','tm','gutenbergr')
knitr::write_bib(packages,file='packages.bib')
@


\begin{document}
\title{Frankenstein's Wordcloud}
\author{Bill Fisher}
\maketitle

\begin{abstract}
In this article, we construct a wordcloud using the tidytext R package for Mary Wollstonecraft (Godwin) Shelley's Frankenstein, or the Modern Prometheus.
\end{abstract}

\textit{Frankenstein, or the Modern Prometheus} (or simply, Frankenstein for short), is a novel written by English author Mary Shelley (1797-1851) that tells the story of Victor Frankenstein, a young scientist who creates a grotesque but sapient creature in an unorthodox scientific experiment. Shelley started writing the story when she was 18, and the first edition of the novel was published in London in 1818, when she was 20.\footnote{The novel was originally published anonymously. Her name first appeared on the second edition, published in France in 1823.}  The book was later published around the world.\citep{Wikipedia}

\section{The GutenbergR package}
There is a package called GutenbergR whichholds the text of many novels to be deciphered using R.  One first has to install this package and bring it in with the library function.  Once loaded, we will find our book and download it.\footnote{You can search the database for the title of Frankenstein using the following codeline: gutenberg\_works(str\_detect(title,'Frankenstein'))} Once downloaded, we can store it in our dataframe.

<<warning=FALSE,message=FALSE>>=
library(gutenbergr)
frankenstein<-gutenberg_download(84)
frankenstein
@

\noindent The dataframe, frankenstein, now contains our book but we still need to clean up the data.  Breaking it down into two major steps, we need to  clear the clutter at the beginning of the book and we need to erase the word  "chapter" from the beginning of each chapter.  To accomplish this, we run the following code:

<<warning=FALSE,message=FALSE>>=
library(stringr)
library(dplyr)

frankenstein<-frankenstein[12:7244,]
frankenstein

frankenstein<-frankenstein%>%
  filter(!str_detect(frankenstein$text,'^CHAPTER'))
frankenstein
@

\noindent Above, we change the start of our dataframe at the 12th line and include that and the last line.  We also use dplyr and the string detect function to elimintae all of the "chapters."

\noindent Next, we need to seperate our words.  We also need to discard the stop words.  To do this we run the following code:

<<warning=FALSE,message=FALSE>>=
library(tidytext)

words_df<-frankenstein%>%
  unnest_tokens(word,text)
words_df

words_df<-words_df%>%
  filter(!(word %in% stop_words$word))
words_df
@

\noindent Now that we have our words seperated, we need to get a count of each word so we can finish constructing our wordcloud.  To do this, we will once again use dplyr.

<<warning=FALSE,message=FALSE>>=
word_freq<-words_df%>%
  group_by(word)%>%
  summarize(count=n())

word_freq
@

\noindent Finally, we can construct our wordcloud.

<<warning=FALSE,message=FALSE>>=
library(wordcloud)
wordcloud(word_freq$word,word_freq$count,min.freq=27)
@

\noindent If we want, we can look at a certain sentiment's wordcloud.  For instance, using tidytext to define each word's sentiment, we can make a wordcloud out of each of Frankenstein's "fear" words with the following piece of code:

<<warning=FALSE,message=FALSE>>=
nrc<-get_sentiments('nrc')

nrc_fear<-nrc%>%
  filter(sentiment=='fear')

frankenstein_words_df<-inner_join(nrc_fear,words_df)

frank_fear_words<-frankenstein_words_df%>%
  group_by(word)%>%
  summarize(count=n())
frank_fear_words

wordcloud(frank_fear_words$word,frank_fear_words$count,min.freq=5)
@


\bibliographystyle{apa}
\bibliography{frankenstein_wordcloud,packages}
\nocite{*}
\end{document}